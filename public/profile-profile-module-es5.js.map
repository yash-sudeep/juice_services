{"version":3,"sources":["webpack:///src/app/profile/profile-routing.module.ts","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/profile/profile.module.ts"],"names":["routes","path","component","ProfileRoutingModule","forChild","ProfileComponent","authService","_httpService","modalService","dataService","faChevronRight","faUser","faAddressCard","faKey","faStopwatch","faPlus","faEllipsisV","faEdit","faTrash","tabs","personal","address","password","timeLeft","OTP_TIMEOUT","timerExpired","timerView","addressArr","firstName","lastName","emailID","mobileNumber","resetPwdForm","currentPassword","newPassword","confirmPassword","addressMode","modalTitle","modalBtnText","userName","addressMobileNumber","pinCode","addressText","cityName","stateName","landmark","addressType","isMobileView","usrObj","firstname","lastname","emailid","mobilenumber","fetchAddress","isMobile","subscribe","val","name","body","oldPassword","postRequest","RESET_PWD","JSON","stringify","token","res","error","handleErrorResponse","ref","action","index","ngbModalOptions","backdrop","keyboard","size","pincode","city","type","charAt","toUpperCase","slice","addressID","addressid","modalReference","open","result","then","reason","obj","formValues","form","value","mobile_number","state","USER_ADDRESS","dismissAll","putRequest","evt","charCode","which","keyCode","getRequest","addressId","deleteRequest","timerText","timeTracker","OTP","activateTab","ProfileModule"],"mappings":"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","file":"profile-profile-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ProfileComponent } from './profile.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ProfileComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProfileRoutingModule {}","import { Component, OnInit } from '@angular/core';\r\nimport { faChevronRight, faUser, faKey, faAddressCard, faStopwatch, faPlus, faEllipsisV, faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { environment } from '../../environments/environment';\r\nimport { HttpService } from '../services/http.service';\r\nimport {\r\n  NgbModal,\r\n  NgbModalOptions\r\n} from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\nimport { DataService } from '../services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  faChevronRight = faChevronRight;\r\n  faUser = faUser;\r\n  faAddressCard = faAddressCard;\r\n  faKey = faKey;\r\n  faStopwatch = faStopwatch;\r\n  faPlus = faPlus;\r\n  faEllipsisV = faEllipsisV;\r\n  faEdit = faEdit;\r\n  faTrash = faTrash;\r\n\r\n  tabs = { personal: false, address: true, password: false };\r\n  timeLeft = environment.OTP_TIMEOUT;\r\n  timerText: string;\r\n  timeTracker: any;\r\n  OTP: string;\r\n  timerExpired = false;\r\n  timerView = false;\r\n  modalReference: any;\r\n  addressArr: any = [];\r\n\r\n  // personalForm Fields\r\n  firstName: string = '';\r\n  lastName: string = '';\r\n  emailID: string = '';\r\n  mobileNumber: string = '';\r\n\r\n  // resetPasaswordForm Fields\r\n  resetPwdForm = { currentPassword: '', newPassword: '', confirmPassword: '' }\r\n\r\n  // addressForm Fields\r\n  addressMode: string = 'NEW';\r\n  modalTitle: string = 'New Address';\r\n  modalBtnText: string = 'Submit';\r\n  userName: string = '';\r\n  addressMobileNumber: string = '';\r\n  pinCode: string = '';\r\n  addressText: string = '';\r\n  cityName: string = '';\r\n  stateName: string = 'Maharashtra';\r\n  landmark: string = '';\r\n  addressType: string = '';\r\n  addressID: number;\r\n\r\n  isMobileView: boolean = false;\r\n\r\n  constructor(public authService: AuthService, private _httpService: HttpService, private modalService: NgbModal, public dataService: DataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.firstName = this.authService.usrObj.firstname;\r\n    this.lastName = this.authService.usrObj.lastname;\r\n    this.emailID = this.authService.usrObj.emailid;\r\n    this.mobileNumber = this.authService.usrObj.mobilenumber;\r\n    this.fetchAddress();\r\n    this.dataService.isMobile.subscribe((val)=>{\r\n      this.isMobileView = val;\r\n    });\r\n  }\r\n  // ========================================================================================================\r\n  activateTab(name: string) {\r\n    switch (name) {\r\n      case 'Personal': this.tabs = { personal: true, address: false, password: false }; break;\r\n      case 'Address': this.tabs = { personal: false, address: true, password: false }; break;\r\n      case 'Password': this.tabs = { personal: false, address: false, password: true }; break;\r\n    }\r\n  }\r\n  // ========================================================================================================\r\n  resetPassword() {\r\n    let body = {\r\n      oldPassword: this.resetPwdForm.newPassword,\r\n      newPassword: this.resetPwdForm.confirmPassword\r\n    }\r\n    this._httpService.postRequest(environment.RESET_PWD, JSON.stringify(body), this.authService.token).subscribe((res: any) => {\r\n      let body = res.body;\r\n    }, (error: Error) => {\r\n      this.dataService.handleErrorResponse(error);\r\n    });\r\n  }\r\n  // ========================================================================================================\r\n  launchModal(ref: any, action: string, index?: number) {\r\n    const ngbModalOptions: NgbModalOptions = {\r\n      backdrop: 'static',\r\n      keyboard: false,\r\n      size: 'lg'\r\n    };\r\n    this.addressMode = action;\r\n    if (action === 'EDIT') {\r\n      this.modalTitle = 'Edit Address';\r\n      this.modalBtnText = 'Update';\r\n      this.userName = this.addressArr[index].name;\r\n      this.addressMobileNumber = this.addressArr[index].mobilenumber;\r\n      this.pinCode = this.addressArr[index].pincode;\r\n      this.addressText = this.addressArr[index].address;\r\n      this.cityName = this.addressArr[index].city;\r\n      this.stateName = 'Maharashtra';\r\n      this.landmark = this.addressArr[index].landmark;\r\n      this.addressType = this.addressArr[index].type.charAt(0).toUpperCase() + this.addressArr[index].type.slice(1);\r\n      this.addressID = this.addressArr[index].addressid;\r\n    } else {\r\n      this.modalTitle = 'New Address';\r\n      this.modalBtnText = 'Submit';\r\n    }\r\n    this.modalReference = this.modalService.open(ref, ngbModalOptions);\r\n    this.modalReference.result.then(\r\n      (result: string) => { },\r\n      (reason: any) => {\r\n      }\r\n    );\r\n  }\r\n  // ========================================================================================================\r\n  submit(obj: NgForm) {\r\n    let formValues = obj.form.value;\r\n    let body = {\r\n      name: formValues.userName,\r\n      mobile_number: formValues.addressMobileNumber,\r\n      pincode: formValues.pinCode,\r\n      address: formValues.addressText,\r\n      city: formValues.cityName,\r\n      state: formValues.stateName,\r\n      landmark: formValues.landmark,\r\n      type: formValues.addressType,\r\n    }\r\n    if (this.addressMode === 'NEW') {\r\n      this._httpService.postRequest(environment.USER_ADDRESS, JSON.stringify(body), this.authService.token).subscribe((res: any) => {\r\n        let body = res.body;\r\n        this.modalService.dismissAll();\r\n      }, (error: Error) => {\r\n        this.dataService.handleErrorResponse(error);\r\n      });\r\n    } else {\r\n      body['addressId'] = this.addressID;\r\n      this._httpService.putRequest(environment.USER_ADDRESS, JSON.stringify(body), this.authService.token).subscribe((res: any) => {\r\n        let body = res.body;\r\n        this.modalService.dismissAll();\r\n      }, (error: Error) => {\r\n        this.dataService.handleErrorResponse(error);\r\n      });\r\n    }\r\n  }\r\n  // ========================================================================================================\r\n  validate(evt: any) {\r\n    var charCode = (evt.which) ? evt.which : evt.keyCode\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57))\r\n      return false;\r\n    return true;\r\n  }\r\n  // ========================================================================================================\r\n  fetchAddress() {\r\n    this._httpService.getRequest(environment.USER_ADDRESS, this.authService.token).subscribe((res: any) => {\r\n      let body = res.body;\r\n      this.addressArr = body.address;\r\n    }, (error: Error) => {\r\n      this.dataService.handleErrorResponse(error);\r\n    });\r\n  }\r\n  // ========================================================================================================\r\n  editAddress(index: number) {\r\n    let body = this.addressArr[index];\r\n  }\r\n  // ========================================================================================================\r\n  deleteAddress(addressId: string) {\r\n    this._httpService.deleteRequest(environment.USER_ADDRESS + \"?addressId=\" + addressId, this.authService.token).subscribe((res: any) => {\r\n      let body = res.body;\r\n      this.fetchAddress();\r\n    }, (error: Error) => {\r\n      this.dataService.handleErrorResponse(error);\r\n    });\r\n  }\r\n  // ========================================================================================================\r\n  ngOnDestroy(): void {\r\n    delete this.timeLeft;\r\n    delete this.timerText;\r\n    delete this.timeTracker;\r\n    delete this.timerView;\r\n    delete this.tabs;\r\n    delete this.OTP;\r\n    delete this.timerExpired;\r\n    delete this.timerView;\r\n    delete this.modalReference;\r\n    delete this.addressArr;\r\n    delete this.isMobileView;\r\n\r\n    delete this.firstName;\r\n    delete this.lastName;\r\n    delete this.emailID;\r\n    delete this.mobileNumber;\r\n    delete this.resetPwdForm;\r\n\r\n    delete this.addressMode;\r\n    delete this.modalTitle;\r\n    delete this.modalBtnText;\r\n    delete this.userName;\r\n    delete this.addressMobileNumber;\r\n    delete this.pinCode;\r\n    delete this.addressText;\r\n    delete this.cityName;\r\n    delete this.stateName;\r\n    delete this.landmark;\r\n    delete this.addressType;\r\n    delete this.addressID;\r\n\r\n    delete this.faStopwatch;\r\n    delete this.faAddressCard;\r\n    delete this.faChevronRight;\r\n    delete this.faEdit;\r\n    delete this.faEllipsisV;\r\n    delete this.faKey;\r\n    delete this.faPlus;\r\n    delete this.faTrash;\r\n    delete this.faUser;\r\n  }\r\n  // ========================================================================================================\r\n}\r\n","<div class=\"container m-t-2\">\r\n    <div class=\"row\">\r\n        <div class=\"col-xl-3 col-lg-12\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-body\">\r\n                            <img src=\"https://d19m59y37dris4.cloudfront.net/bubbly-dashboard/1-0/img/avatar-6.jpg\"\r\n                                alt=\"Jason Doe\" style=\"max-width: 2.5rem;\" class=\"img-fluid rounded-circle shadow\">\r\n                            <div class=\"user-container\">\r\n                                <p>Hello</p>\r\n                                <div class=\"user-name\">{{authService.clientName | uppercase}}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row m-t-2\">\r\n                <div class=\"col-12\">\r\n                    <p class=\"text-left text-muted p-header text-center text-uppercase\">\r\n                        Account Settings\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <ul class=\"list-group\">\r\n                        <li class=\"list-group-item\" [ngClass]=\"{ 'active': tabs.personal }\"\r\n                            (click)=\"activateTab('Personal')\"><span class=\"icon-left\">\r\n                                <fa-icon [icon]=\"faUser\"></fa-icon>\r\n                            </span> Profile Information <span class=\"icon-right\" *ngIf=\"tabs.personal\">\r\n                                <fa-icon [icon]=\"faChevronRight\"></fa-icon>\r\n                            </span></li>\r\n                        <li class=\"list-group-item\" [ngClass]=\"{ 'active': tabs.address }\"\r\n                            (click)=\"activateTab('Address')\"><span class=\"icon-left\">\r\n                                <fa-icon [icon]=\"faAddressCard\"></fa-icon>\r\n                            </span> Manage Addresses <span class=\"icon-right\" *ngIf=\"tabs.address\">\r\n                                <fa-icon [icon]=\"faChevronRight\"></fa-icon>\r\n                            </span></li>\r\n                        <li class=\"list-group-item\" [ngClass]=\"{ 'active': tabs.password }\"\r\n                            (click)=\"activateTab('Password')\"><span class=\"icon-left\">\r\n                                <fa-icon [icon]=\"faKey\"></fa-icon>\r\n                            </span> Change Password <span class=\"icon-right\" *ngIf=\"tabs.password\">\r\n                                <fa-icon [icon]=\"faChevronRight\"></fa-icon>\r\n                            </span></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-xl-9 col-lg-12\">\r\n            <ng-container *ngIf=\"tabs.personal\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-12\">\r\n                        <div class=\"card\" [ngClass]=\"{ 'm-t-1': isMobileView }\">\r\n                            <div class=\"card-body\">\r\n                                <form>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-xl-6 col-sm-12 m-t-2\">\r\n                                            <label for=\"firstName\">First Name</label>\r\n                                            <input type=\"text\" class=\"form-control not-allowed\" id=\"firstName\"\r\n                                                name=\"firstName\" [(ngModel)]=\"firstName\"\r\n                                                [ngModelOptions]=\"{standalone: true}\" disabled>\r\n                                        </div>\r\n                                        <div class=\"col-xl-6 col-sm-12 m-t-2\">\r\n                                            <label for=\"lastName\">Last Name</label>\r\n                                            <input type=\"text\" class=\"form-control not-allowed\" id=\"lastName\"\r\n                                                name=\"lastName\" [(ngModel)]=\"lastName\"\r\n                                                [ngModelOptions]=\"{standalone: true}\" disabled>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"form-group m-t-2\">\r\n                                        <label for=\"emailAddress\">Email Address</label>\r\n                                        <input type=\"email\" class=\"form-control not-allowed\" id=\"emailAddress\"\r\n                                            name=\"emailAddress\" [(ngModel)]=\"emailID\"\r\n                                            [ngModelOptions]=\"{standalone: true}\" disabled>\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"mobileNumber\">Mobile Number</label>\r\n                                        <input type=\"email\" class=\"form-control not-allowed\" id=\"mobileNumber\"\r\n                                            name=\"mobileNumber\" disabled [(ngModel)]=\"mobileNumber\"\r\n                                            [ngModelOptions]=\"{standalone: true}\">\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"tabs.password\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xl-4\">\r\n                                <h6>Your password must:</h6>\r\n                                <ul>\r\n                                    <li>8 or more characters in length</li>\r\n                                    <li>Not to be same as your current password</li>\r\n                                    <li>Hard for attackers to guess</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"col-xl-8\">\r\n                                <form>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"currentPassword\">Current Password</label>\r\n                                        <input type=\"password\" class=\"form-control\" id=\"currentPassword\" minlength=\"8\"\r\n                                            [(ngModel)]=\"resetPwdForm.currentPassword\" required>\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"newPassword\">New Password</label>\r\n                                        <input type=\"password\" class=\"form-control\" id=\"newPassword\" minlength=\"8\"\r\n                                            [(ngModel)]=\"resetPwdForm.newPassword\" required autofocus>\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"confirmPassword\">Confirm Password</label>\r\n                                        <input type=\"password\" class=\"form-control\" id=\"confirmPassword\" minlength=\"8\"\r\n                                            [(ngModel)]=\"resetPwdForm.confirmPassword\">\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-12\">\r\n                                            <button type=\"button\" class=\"btn btn-dark btn-primary d-block mx-auto\"\r\n                                                [disabled]=\"(resetPwdForm.newPassword.length === 0) || (resetPwdForm.confirmPassword.length === 0) || resetPwdForm.newPassword !== resetPwdForm.confirmPassword || resetPwdForm.currentPassword === resetPwdForm.newPassword\">Change\r\n                                                Password</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"tabs.address\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <div class=\"card\">\r\n                            <div class=\"card-body\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-12\">\r\n                                        <button class=\"btn btn-outline-dark\" id=\"addAddress\"\r\n                                            (click)=\"launchModal(addressModal, 'NEW')\">\r\n                                            <fa-icon class=\"m-r-1\" [icon]=\"faPlus\"></fa-icon> Add New Address\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-xl-6 col-lg-12\" *ngFor=\"let item of addressArr; let i=index;\">\r\n                                        <div class=\"card m-b-2\">\r\n                                            <div class=\"card-header bg-transparent\">\r\n                                                <h6 class=\"m-b-0 text-uppercase\">{{item.name}} ( {{item.mobilenumber}} )\r\n                                                    <span class=\"badge badge-secondary\">{{item.type}}</span></h6>\r\n                                                <div class=\"dropdown\">\r\n                                                    <button class=\"btn btn-light bg-transparent\" type=\"button\"\r\n                                                        id=\"dropdownMenuButton\">\r\n                                                        <fa-icon [icon]=\"faEllipsisV\"></fa-icon>\r\n                                                    </button>\r\n                                                    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                                        <a class=\"dropdown-item\" href=\"javascript:void(0);\"\r\n                                                            (click)=\"launchModal(addressModal, 'EDIT', i)\">\r\n                                                            <fa-icon class=\"m-r-1\" [icon]=\"faEdit\"></fa-icon>Edit\r\n                                                        </a>\r\n                                                        <a class=\"dropdown-item\" href=\"javascript:void(0);\"\r\n                                                            (click)=\"deleteAddress(item.addressid)\">\r\n                                                            <fa-icon class=\"m-r-1\" [icon]=\"faTrash\"></fa-icon>Delete\r\n                                                        </a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"card-body\">\r\n                                                <p class=\"m-b-0 text-uppercase f-w-400\">{{item.address}},\r\n                                                    {{item.landmark}}, {{item.city}}, {{item.state}} -\r\n                                                    <strong>{{item.pincode}}</strong></p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #addressModal let-modal>\r\n    <div class=\"modal-header\">\r\n        <button type=\"button\" class=\"close\" (click)=\"modal.dismiss('Cross click')\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <div class=\"container\">\r\n            <div class=\"header m-b-2\">\r\n                <h5 class=\"text-center\">{{modalTitle | uppercase}}</h5>\r\n                <hr>\r\n                <div class=\"container m-t-2\">\r\n                    <form #addressForm=\"ngForm\" (ngSubmit)=\"submit(addressForm)\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xl-6 col-lg-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"userName\">Name</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"userName\" name=\"userName\"\r\n                                        [(ngModel)]=\"userName\" required autofocus>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-xl-6 col-lg-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"addressMobileNumber\">Mobile Number</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"addressMobileNumber\"\r\n                                        name=\"addressMobileNumber\" [(ngModel)]=\"addressMobileNumber\" required\r\n                                        minlength=\"10\" maxlength=\"10\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"addressText\">Address</label>\r\n                                    <textarea class=\"form-control\" id=\"addressText\" name=\"addressText\" rows=\"4\"\r\n                                        [(ngModel)]=\"addressText\"></textarea>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xl-6 col-lg-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"pinCode\">Pincode</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"pinCode\" name=\"pinCode\"\r\n                                        [(ngModel)]=\"pinCode\" required minlength=\"6\" maxlength=\"6\"\r\n                                        (keypress)=\"validate($event)\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-xl-6 col-lg-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"landmark\">Landmark</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"landmark\" name=\"landmark\"\r\n                                        [(ngModel)]=\"landmark\" required>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xl-6 col-lg-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"cityName\">City</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"cityName\" name=\"cityName\"\r\n                                        [(ngModel)]=\"cityName\" required>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-xl-6 col-lg-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"stateName\">State</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"stateName\" name=\"stateName\"\r\n                                        [(ngModel)]=\"stateName\" required>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row m-b-2\">\r\n                            <div class=\"col-12 form-inline\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"radio\" class=\"form-control\" id=\"addressType\" value=\"Home\"\r\n                                        name=\"addressType\" [(ngModel)]=\"addressType\" required>\r\n                                    <label for=\"addressType1\">Home</label>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"radio\" class=\"form-control\" id=\"addressType\" value=\"Office\"\r\n                                        name=\"addressType\" [(ngModel)]=\"addressType\" required>\r\n                                    <label for=\"addressType2\">Office</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <hr>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <button type=\"submit\"\r\n                                    class=\"btn btn-dark btn-block d-block mx-auto\">{{modalBtnText}}</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ProfileRoutingModule } from './profile-routing.module';\r\nimport { NgOtpInputModule } from 'ng-otp-input';\r\nimport { ProfileComponent } from './profile.component';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { NgbTooltipModule, NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProfileComponent\r\n  ],\r\n  imports: [CommonModule, FormsModule, ProfileRoutingModule, NgOtpInputModule, FontAwesomeModule, NgbTooltipModule, NgbModalModule]\r\n})\r\nexport class ProfileModule { }"]}