{"version":3,"sources":["webpack:///src/app/profile/profile-routing.module.ts","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/profile/profile.module.ts"],"names":["routes","path","component","ProfileRoutingModule","forChild","ProfileComponent","authService","_httpService","_authService","modalService","faChevronRight","faUser","faAddressCard","faKey","faStopwatch","faPlus","faEllipsisV","faEdit","faTrash","tabs","personal","address","password","timeLeft","OTP_TIMEOUT","timerExpired","timerView","addressArr","firstName","lastName","emailID","mobileNumber","resetPwdForm","currentPassword","newPassword","confirmPassword","addressMode","modalTitle","modalBtnText","userName","addressMobileNumber","pinCode","addressText","cityName","stateName","landmark","addressType","usrObj","firstname","lastname","emailid","mobilenumber","fetchAddress","name","console","log","body","oldPassword","postRequest","RESET_PWD","JSON","stringify","token","subscribe","res","error","ref","action","index","ngbModalOptions","backdrop","keyboard","size","pincode","city","type","charAt","toUpperCase","slice","addressID","addressid","modalReference","open","result","then","reason","obj","formValues","form","value","mobile_number","state","USER_ADDRESS","dismissAll","putRequest","evt","charCode","which","keyCode","getRequest","addressId","deleteRequest","activateTab","ProfileModule"],"mappings":"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","file":"profile-profile-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ProfileComponent } from './profile.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ProfileComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProfileRoutingModule {}","import { Component, OnInit } from '@angular/core';\nimport { faChevronRight, faUser, faKey, faAddressCard, faStopwatch, faPlus, faEllipsisV, faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { AuthService } from '../services/auth.service';\nimport { environment } from '../../environments/environment';\nimport { HttpService } from '../services/http.service';\nimport {\n  NgbModal,\n  NgbModalOptions\n} from '@ng-bootstrap/ng-bootstrap';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  faChevronRight = faChevronRight;\n  faUser = faUser;\n  faAddressCard = faAddressCard;\n  faKey = faKey;\n  faStopwatch = faStopwatch;\n  faPlus = faPlus;\n  faEllipsisV = faEllipsisV;\n  faEdit = faEdit;\n  faTrash = faTrash;\n\n  tabs = { personal: false, address: true, password: false };\n  timeLeft = environment.OTP_TIMEOUT;\n  timerText: string;\n  timeTracker: any;\n  OTP: string;\n  timerExpired = false;\n  timerView = false;\n  modalReference: any;\n  addressArr: any = [];\n\n  // personalForm Fields\n  firstName: string = '';\n  lastName: string = '';\n  emailID: string = '';\n  mobileNumber: string = '';\n\n  // resetPasaswordForm Fields\n  resetPwdForm = { currentPassword: '', newPassword: '', confirmPassword: '' }\n\n  // addressForm Fields\n  addressMode: string = 'NEW';\n  modalTitle: string = 'New Address';\n  modalBtnText: string = 'Submit';\n  userName: string = '';\n  addressMobileNumber: string = '';\n  pinCode: string = '';\n  addressText: string = '';\n  cityName: string = '';\n  stateName: string = 'Maharashtra';\n  landmark: string = '';\n  addressType: string = '';\n  addressID: number;\n\n  constructor(public authService: AuthService, private _httpService: HttpService, private _authService: AuthService, private modalService: NgbModal) { }\n\n  ngOnInit(): void {\n    this.firstName = this.authService.usrObj.firstname;\n    this.lastName = this.authService.usrObj.lastname;\n    this.emailID = this.authService.usrObj.emailid;\n    this.mobileNumber = this.authService.usrObj.mobilenumber;\n    this.fetchAddress();\n  }\n\n  activateTab(name: string) {\n    console.log('Tab: ' + name);\n    switch (name) {\n      case 'Personal': this.tabs = { personal: true, address: false, password: false }; break;\n      case 'Address': this.tabs = { personal: false, address: true, password: false }; break;\n      case 'Password': this.tabs = { personal: false, address: false, password: true }; break;\n    }\n  }\n\n  resetPassword() {\n    let body = {\n      oldPassword: this.resetPwdForm.newPassword,\n      newPassword: this.resetPwdForm.confirmPassword\n    }\n    this._httpService.postRequest(environment.RESET_PWD, JSON.stringify(body), this._authService.token).subscribe((res: any) => {\n      let body = res.body;\n      console.log(body);\n    }, (error: Error) => {\n    });\n  }\n\n  launchModal(ref: any, action: string, index?: number) {\n    const ngbModalOptions: NgbModalOptions = {\n      backdrop: 'static',\n      keyboard: false,\n      size: 'lg'\n    };\n    this.addressMode = action;\n    if (action === 'EDIT') {\n      this.modalTitle= 'Edit Address';\n      this.modalBtnText = 'Update';\n      this.userName = this.addressArr[index].name;\n      this.addressMobileNumber = this.addressArr[index].mobilenumber;\n      this.pinCode = this.addressArr[index].pincode;\n      this.addressText = this.addressArr[index].address;\n      this.cityName = this.addressArr[index].city;\n      this.stateName = 'Maharashtra';\n      this.landmark = this.addressArr[index].landmark;\n      this.addressType = this.addressArr[index].type.charAt(0).toUpperCase() + this.addressArr[index].type.slice(1);\n      this.addressID = this.addressArr[index].addressid;\n    } else {\n      this.modalTitle = 'New Address';\n      this.modalBtnText = 'Submit';\n    }\n    this.modalReference = this.modalService.open(ref, ngbModalOptions);\n    this.modalReference.result.then(\n      (result: string) => { },\n      (reason: any) => {\n      }\n    );\n  }\n\n  submit(obj: NgForm) {\n    let formValues = obj.form.value;\n    console.log(formValues);\n    let body = {\n      name: formValues.userName,\n      mobile_number: formValues.addressMobileNumber,\n      pincode: formValues.pinCode,\n      address: formValues.addressText,\n      city: formValues.cityName,\n      state: formValues.stateName,\n      landmark: formValues.landmark,\n      type: formValues.addressType,\n    }\n    if(this.addressMode === 'NEW') {\n      this._httpService.postRequest(environment.USER_ADDRESS, JSON.stringify(body), this._authService.token).subscribe((res: any) => {\n        let body = res.body;\n        console.log(body);\n        this.modalService.dismissAll();\n      }, (error: Error) => {\n      });\n    } else {\n      body['addressId'] = this.addressID;\n      this._httpService.putRequest(environment.USER_ADDRESS, JSON.stringify(body), this._authService.token).subscribe((res: any) => {\n        let body = res.body;\n        console.log(body);\n        this.modalService.dismissAll();\n      }, (error: Error) => {\n      });\n    }\n  }\n\n  validate(evt: any) {\n    var charCode = (evt.which) ? evt.which : evt.keyCode\n    if (charCode > 31 && (charCode < 48 || charCode > 57))\n      return false;\n    return true;\n  }\n\n  fetchAddress() {\n    this._httpService.getRequest(environment.USER_ADDRESS, this._authService.token).subscribe((res: any) => {\n      let body = res.body;\n      this.addressArr = body.address;\n      console.log(this.addressArr);\n    }, (error: Error) => {\n    });\n  }\n\n  editAddress(index: number) {\n    let body = this.addressArr[index];\n  }\n\n  deleteAddress(addressId: string) {\n    this._httpService.deleteRequest(environment.USER_ADDRESS + \"?addressId=\" + addressId, this._authService.token).subscribe((res: any) => {\n      let body = res.body;\n      console.log(body);\n      this.fetchAddress();\n    }, (error: Error) => {\n    });\n  }\n}\n","<div class=\"container m-t-2\">\n    <div class=\"row\">\n        <div class=\"col-xl-3 col-lg-12\">\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"card\">\n                        <div class=\"card-body\">\n                            <img src=\"https://d19m59y37dris4.cloudfront.net/bubbly-dashboard/1-0/img/avatar-6.jpg\"\n                                alt=\"Jason Doe\" style=\"max-width: 2.5rem;\" class=\"img-fluid rounded-circle shadow\">\n                            <div class=\"user-container\">\n                                <p>Hello</p>\n                                <div class=\"user-name\">{{authService.clientName | uppercase}}</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row m-t-2\">\n                <div class=\"col-12\">\n                    <p class=\"text-left text-muted p-header text-center text-uppercase\">\n                        Account Settings\n                    </p>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <ul class=\"list-group\">\n                        <li class=\"list-group-item\" [ngClass]=\"{ 'active': tabs.personal }\"\n                            (click)=\"activateTab('Personal')\"><span class=\"icon-left\">\n                                <fa-icon [icon]=\"faUser\"></fa-icon>\n                            </span> Profile Information <span class=\"icon-right\" *ngIf=\"tabs.personal\">\n                                <fa-icon [icon]=\"faChevronRight\"></fa-icon>\n                            </span></li>\n                        <li class=\"list-group-item\" [ngClass]=\"{ 'active': tabs.address }\"\n                            (click)=\"activateTab('Address')\"><span class=\"icon-left\">\n                                <fa-icon [icon]=\"faAddressCard\"></fa-icon>\n                            </span> Manage Addresses <span class=\"icon-right\" *ngIf=\"tabs.address\">\n                                <fa-icon [icon]=\"faChevronRight\"></fa-icon>\n                            </span></li>\n                        <li class=\"list-group-item\" [ngClass]=\"{ 'active': tabs.password }\"\n                            (click)=\"activateTab('Password')\"><span class=\"icon-left\">\n                                <fa-icon [icon]=\"faKey\"></fa-icon>\n                            </span> Change Password <span class=\"icon-right\" *ngIf=\"tabs.password\">\n                                <fa-icon [icon]=\"faChevronRight\"></fa-icon>\n                            </span></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-xl-9 col-lg-12\">\n            <ng-container *ngIf=\"tabs.personal\">\n                <div class=\"row\">\n                    <div class=\"col-xl-12\">\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n                                <form>\n                                    <div class=\"row\">\n                                        <div class=\"col\">\n                                            <label for=\"firstName\">First Name</label>\n                                            <input type=\"text\" class=\"form-control not-allowed\" id=\"firstName\"\n                                                name=\"firstName\" [(ngModel)]=\"firstName\"\n                                                [ngModelOptions]=\"{standalone: true}\" disabled>\n                                        </div>\n                                        <div class=\"col\">\n                                            <label for=\"lastName\">Last Name</label>\n                                            <input type=\"text\" class=\"form-control not-allowed\" id=\"lastName\"\n                                                name=\"lastName\" [(ngModel)]=\"lastName\"\n                                                [ngModelOptions]=\"{standalone: true}\" disabled>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group m-t-2\">\n                                        <label for=\"emailAddress\">Email Address</label>\n                                        <input type=\"email\" class=\"form-control not-allowed\" id=\"emailAddress\"\n                                            name=\"emailAddress\" [(ngModel)]=\"emailID\"\n                                            [ngModelOptions]=\"{standalone: true}\" disabled>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <label for=\"mobileNumber\">Mobile Number</label>\n                                        <input type=\"email\" class=\"form-control not-allowed\" id=\"mobileNumber\"\n                                            name=\"mobileNumber\" disabled [(ngModel)]=\"mobileNumber\"\n                                            [ngModelOptions]=\"{standalone: true}\">\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n            <ng-container *ngIf=\"tabs.password\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-xl-4\">\n                                <h6>Your password must:</h6>\n                                <ul>\n                                    <li>8 or more characters in length</li>\n                                    <li>Not to be same as your current password</li>\n                                    <li>Hard for attackers to guess</li>\n                                </ul>\n                            </div>\n                            <div class=\"col-xl-8\">\n                                <form>\n                                    <div class=\"form-group\">\n                                        <label for=\"currentPassword\">Current Password</label>\n                                        <input type=\"password\" class=\"form-control\" id=\"currentPassword\" minlength=\"8\"\n                                            [(ngModel)]=\"resetPwdForm.currentPassword\" required>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <label for=\"newPassword\">New Password</label>\n                                        <input type=\"password\" class=\"form-control\" id=\"newPassword\" minlength=\"8\"\n                                            [(ngModel)]=\"resetPwdForm.newPassword\" required autofocus>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <label for=\"confirmPassword\">Confirm Password</label>\n                                        <input type=\"password\" class=\"form-control\" id=\"confirmPassword\" minlength=\"8\"\n                                            [(ngModel)]=\"resetPwdForm.confirmPassword\">\n                                    </div>\n                                    <button type=\"button\" class=\"btn btn-dark btn-primary mx-auto d-block\"\n                                        [disabled]=\"(resetPwdForm.newPassword.length === 0) || (resetPwdForm.confirmPassword.length === 0) || resetPwdForm.newPassword !== resetPwdForm.confirmPassword || resetPwdForm.currentPassword === resetPwdForm.newPassword\">Change\n                                        Password</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n            <ng-container *ngIf=\"tabs.address\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n                                <div class=\"row\">\n                                    <div class=\"col-12\">\n                                        <button class=\"btn btn-outline-dark\" id=\"addAddress\"\n                                            (click)=\"launchModal(addressModal, 'NEW')\">\n                                            <fa-icon class=\"m-r-1\" [icon]=\"faPlus\"></fa-icon> Add New Address\n                                        </button>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-xl-6 col-lg-12\" *ngFor=\"let item of addressArr; let i=index;\">\n                                        <div class=\"card m-b-2\">\n                                            <div class=\"card-header bg-transparent\">\n                                                <h6 class=\"m-b-0 text-uppercase\">{{item.name}} ( {{item.mobilenumber}} ) <span\n                                                        class=\"badge badge-secondary\">{{item.type}}</span></h6>\n                                                <div class=\"dropdown\">\n                                                    <button class=\"btn btn-light bg-transparent\" type=\"button\"\n                                                        id=\"dropdownMenuButton\">\n                                                        <fa-icon [icon]=\"faEllipsisV\"></fa-icon>\n                                                    </button>\n                                                    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                                                        <a class=\"dropdown-item\" href=\"javascript:void(0);\" (click)=\"launchModal(addressModal, 'EDIT', i)\">\n                                                            <fa-icon class=\"m-r-1\" [icon]=\"faEdit\"></fa-icon>Edit\n                                                        </a>\n                                                        <a class=\"dropdown-item\" href=\"javascript:void(0);\" (click)=\"deleteAddress(item.addressid)\">\n                                                            <fa-icon class=\"m-r-1\" [icon]=\"faTrash\"></fa-icon>Delete\n                                                        </a>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"card-body\">\n                                                <p class=\"m-b-0 text-uppercase f-w-400\">{{item.address}}, {{item.landmark}}, {{item.city}}, {{item.state}} - <strong>{{item.pincode}}</strong></p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n    </div>\n</div>\n\n<ng-template #addressModal let-modal>\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" (click)=\"modal.dismiss('Cross click')\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <div class=\"container\">\n            <div class=\"header m-b-2\">\n                <h5 class=\"text-center\">{{modalTitle | uppercase}}</h5>\n                <hr>\n                <div class=\"container m-t-2\">\n                    <form #addressForm=\"ngForm\" (ngSubmit)=\"submit(addressForm)\">\n                        <div class=\"row\">\n                            <div class=\"col-xl-6 col-lg-12\">\n                                <div class=\"form-group\">\n                                    <label for=\"userName\">Name</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"userName\" name=\"userName\"\n                                        [(ngModel)]=\"userName\" required autofocus>\n                                </div>\n                            </div>\n                            <div class=\"col-xl-6 col-lg-12\">\n                                <div class=\"form-group\">\n                                    <label for=\"addressMobileNumber\">Mobile Number</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"addressMobileNumber\"\n                                        name=\"addressMobileNumber\" [(ngModel)]=\"addressMobileNumber\" required\n                                        minlength=\"10\" maxlength=\"10\">\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-12\">\n                                <div class=\"form-group\">\n                                    <label for=\"addressText\">Address</label>\n                                    <textarea class=\"form-control\" id=\"addressText\" name=\"addressText\" rows=\"4\"\n                                        [(ngModel)]=\"addressText\"></textarea>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-xl-6 col-lg-12\">\n                                <div class=\"form-group\">\n                                    <label for=\"pinCode\">Pincode</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"pinCode\" name=\"pinCode\"\n                                        [(ngModel)]=\"pinCode\" required minlength=\"6\" maxlength=\"6\" (keypress)=\"validate($event)\">\n                                </div>\n                            </div>\n                            <div class=\"col-xl-6 col-lg-12\">\n                                <div class=\"form-group\">\n                                    <label for=\"landmark\">Landmark</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"landmark\" name=\"landmark\"\n                                        [(ngModel)]=\"landmark\" required>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-xl-6 col-lg-12\">\n                                <div class=\"form-group\">\n                                    <label for=\"cityName\">City</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"cityName\" name=\"cityName\"\n                                        [(ngModel)]=\"cityName\" required>\n                                </div>\n                            </div>\n                            <div class=\"col-xl-6 col-lg-12\">\n                                <div class=\"form-group\">\n                                    <label for=\"stateName\">State</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"stateName\" name=\"stateName\"\n                                        [(ngModel)]=\"stateName\" required>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row m-b-2\">\n                            <div class=\"col-12 form-inline\">\n                                <div class=\"form-group\">\n                                    <input type=\"radio\" class=\"form-control\" id=\"addressType\" value=\"Home\"\n                                        name=\"addressType\" [(ngModel)]=\"addressType\" required>\n                                    <label for=\"addressType1\">Home</label>\n                                </div>\n                                <div class=\"form-group\">\n                                    <input type=\"radio\" class=\"form-control\" id=\"addressType\" value=\"Office\"\n                                        name=\"addressType\" [(ngModel)]=\"addressType\" required>\n                                    <label for=\"addressType2\">Office</label>\n                                </div>\n                            </div>\n                        </div>\n                        <hr>\n                        <div class=\"row\">\n                            <div class=\"col-12\">\n                                <button type=\"submit\"\n                                    class=\"btn btn-dark btn-block d-block mx-auto\">{{modalBtnText}}</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ProfileRoutingModule } from './profile-routing.module';\r\nimport { NgOtpInputModule } from 'ng-otp-input';\r\nimport { ProfileComponent } from './profile.component';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { NgbTooltipModule, NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProfileComponent\r\n  ],\r\n  imports: [CommonModule, FormsModule, ProfileRoutingModule, NgOtpInputModule, FontAwesomeModule, NgbTooltipModule, NgbModalModule]\r\n})\r\nexport class ProfileModule { }"]}