{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cart/cart.component.ts","webpack:///src/app/cart/cart.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/main/main.component.ts","webpack:///src/app/main/main.component.html","webpack:///src/app/program/program.component.ts","webpack:///src/app/program/program.component.html","webpack:///src/app/services/auth-guard.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/http.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","canLoad","canActivate","loadChildren","m","ProfileModule","OrdersModule","AppRoutingModule","forRoot","AppComponent","authService","router","activatedRoute","_httpService","faShoppingCart","faBoxOpen","faIdCard","faBell","faPowerOff","programList","getPrograms","logout","SIGN_OUT","subscribe","res","body","isLoggedIn","token","undefined","clientName","usrObj","navigate","relativeTo","error","getRequest","PROGRAM_LIST","programId","forEach","el","programid","program","queryParams","AppModule","CartComponent","cartItems","subscriptions","getSubscriptions","storageItem","localStorage","getItem","JSON","parse","SUBSCRIPTIONS","console","log","subscriptionMap","Map","g","item","key","n","element","push","set","Number","priceMap","name","price","get","LoginComponent","modalService","toggleBtn","msgText","linkText","headerText","signInFormEnabled","timeLeft","OTP_TIMEOUT","OTP","timerExpired","timerView","faStopwatch","otpView","mobileNumber","forgotPwdform","password","confirmPassword","ref","ngbModalOptions","backdrop","keyboard","sendOTP","signUpForm","form","value","modalReference","open","result","reason","$event","ev","toString","length","signUp","clearTimeout","timeTracker","timerText","_url","SIGN_UP_VERIFY","FORGOT_PWD_VERIFY","postRequest","stringify","mobile_number","setInterval","countdown","formValues","signInForm","login","LOGIN","postAuth","otp","FORGOT_PWD","firstname","firstName","lastname","lastName","email","emailID","userrole","SIGN_UP","close","charAt","toUpperCase","slice","redirectUrl","toggleBtnHandler","MainComponent","ProgramComponent","products","closeResult","faPlus","faMinus","faShoppingBasket","basketItems","minBasketItems","cartAlert","selectedItemCount","selectedItemIndex","activeProgram","params","parseInt","getProducts","index","productAdvantages","size","getDismissReason","ESC","BACKDROP_CLICK","PRODUCTS_LIST","total","operation","validateBasket","items","cartObj","cartArr","o","setItem","AuthGuardService","route","state","url","checkLogin","sessionId","navigationExtras","fragment","AuthService","uri","deleteRequest","HttpService","_httpClient","headers","encodeURI","observe","pipe","errorHandler","post","put","responseType","prop","a","b","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, NoPreloading  } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { ProgramComponent } from './program/program.component';\nimport { CartComponent } from './cart/cart.component';\nimport { AuthGuardService } from './services/auth-guard.service';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full'},\n  { path: 'login', component: LoginComponent},\n  { path: 'profile', canLoad: [AuthGuardService], canActivate: [AuthGuardService], loadChildren: () => import('./profile/profile.module').then(m => m.ProfileModule)},\n  { path: 'orders', canLoad: [AuthGuardService], canActivate: [AuthGuardService], loadChildren: () => import('./orders/orders.module').then(m => m.OrdersModule)},\n  { path: 'program', component: ProgramComponent},\n  { path: 'cart', component: CartComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { faShoppingCart, faBoxOpen, faIdCard, faBell, faPowerOff } from '@fortawesome/free-solid-svg-icons';\nimport { AuthService } from './services/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { environment } from '../environments/environment';\nimport { HttpService } from './services/http.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  faShoppingCart = faShoppingCart;\n  faBoxOpen = faBoxOpen;\n  faIdCard = faIdCard;\n  faBell = faBell;\n  faPowerOff = faPowerOff;\n  public programList = [];\n\n  constructor(public authService: AuthService, private router: Router, private activatedRoute: ActivatedRoute, private _httpService: HttpService) { }\n\n  ngOnInit() {\n    this.getPrograms();\n  }\n\n  public logout() {\n    this.authService.logout(environment.SIGN_OUT).subscribe((res: any) => {\n      let body = res.body;\n      this.authService.isLoggedIn = false;\n      this.authService.token = undefined;\n      this.authService.clientName = '';\n      this.authService.usrObj = null;\n      this.router.navigate(['/login'], { relativeTo: this.activatedRoute });\n    }, (error: Error) => {\n    });\n  }\n\n  private getPrograms() {\n    this._httpService.getRequest(environment.PROGRAM_LIST, this.authService.token).subscribe((res) => {\n      let body = res.body;\n      this.programList = body['data'];\n      \n    })\n  }\n\n  public navigateToProgram(programId: number) {\n    this.programList.forEach((el: any)=>{\n      if(el.programid === programId) {\n        this.authService.program = el;\n      }\n    });\n    this.router.navigate(['/program'], { relativeTo: this.activatedRoute, queryParams: {programId: programId} });\n  }\n\n  ngOnDestroy() {\n    delete this.programList;\n    delete this.faBell;\n    delete this.faBoxOpen;\n    delete this.faIdCard;\n    delete this.faPowerOff;\n    delete this.faShoppingCart;\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light\">\r\n    <a class=\"navbar-brand\" href=\"javascript:void(0);\">COMPANY NAME</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n        <ul class=\"navbar-nav ml-auto\">\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"javascript:void(0);\">Home <span class=\"sr-only\">(current)</span></a>\r\n            </li>\r\n            <li class=\"nav-item dropdown\">\r\n                <a class=\"nav-link dropdown-toggle\" href=\"javascript:void(0);\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    Shop\r\n                </a>\r\n                <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                    <ng-container *ngFor=\"let item of programList; let p=index\">\r\n                        <ng-container *ngIf=\"programList.length === 1\">\r\n                            <a class=\"dropdown-item\" (click)=\"navigateToProgram(item.programid)\">{{item.name}}</a>\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"programList.length !== 1\">\r\n                            <a class=\"dropdown-item\" (click)=\"navigateToProgram(item.programid)\">{{item.name}}</a>\r\n                            <ng-container *ngIf=\"p !== (programList.length - 1)\">\r\n                                <div class=\"dropdown-divider\"></div>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                    <!-- <a routerLink=\"program\" class=\"dropdown-item\">Program 1</a>\r\n                    <div class=\"dropdown-divider\"></div><a routerLink=\"program\" class=\"dropdown-item\">Program 2</a>\r\n                    <div class=\"dropdown-divider\"></div><a routerLink=\"program\" class=\"dropdown-item\">Program 3</a>\r\n                    <div class=\"dropdown-divider\"></div><a routerLink=\"program\" class=\"dropdown-item\">Custom</a> -->\r\n                </div>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"javascript:void(0);\">About Us</a>\r\n            </li>\r\n            <li class=\"nav-item active\" *ngIf=\"!authService.isLoggedIn\">\r\n                <a class=\"nav-link\" routerLink=\"login\">Login</a>\r\n            </li>\r\n            <li class=\"nav-item dropdown\" id=\"user-dropdown\" *ngIf=\"authService.isLoggedIn\">\r\n                <a class=\"nav-link dropdown-toggle\" href=\"javascript:void(0);\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    <img src=\"https://d19m59y37dris4.cloudfront.net/bubbly-dashboard/1-0/img/avatar-6.jpg\" alt=\"Jason Doe\" style=\"max-width: 2.5rem;\" class=\"img-fluid rounded-circle shadow\">\r\n                </a>\r\n                <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                    <a href=\"javascript:void(0);\" class=\"dropdown-item user-name\"><strong\r\n                            class=\"d-block text-uppercase\">{{authService.clientName}}</strong></a>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <a routerLink=\"profile\" class=\"dropdown-item\">\r\n                        <fa-icon [icon]=\"faIdCard\" class=\"float-left m-r-1\"></fa-icon>My Profile\r\n                    </a>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <a routerLink=\"orders\" class=\"dropdown-item\">\r\n                        <fa-icon [icon]=\"faBoxOpen\" class=\"float-left m-r-1\"></fa-icon>My Orders\r\n                    </a>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <a href=\"javascript:void(0);\" class=\"dropdown-item\">\r\n                        <fa-icon [icon]=\"faBell\" class=\"float-left m-r-1\"></fa-icon>Notifications</a>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <a class=\"dropdown-item\" (click)=\"logout()\">\r\n                        <fa-icon [icon]=\"faPowerOff\" class=\"float-left m-r-1\"></fa-icon>Logout</a>\r\n                </div>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" routerLink=\"cart\" *ngIf=\"authService.isLoggedIn\">\r\n                    <span class=\"badge badge-danger\">2</span>\r\n                    <fa-icon [icon]=\"faShoppingCart\"></fa-icon> Cart\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</nav>\r\n<div class=\"container-fluid\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n<!-- <footer class=\"footer\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <p class=\"text-center\">© 2020 Company Name</p>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <p class=\"text-center\"><a>Terms</a> | <a>Privacy Policy</a> | <a>Return & Refund Policy</a></p>\r\n        </div>\r\n    </div>\r\n</footer> -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './main/main.component';\nimport { LoginComponent } from './login/login.component';\nimport { NgOtpInputModule } from 'ng-otp-input';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { NgbModalModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ProgramComponent } from './program/program.component';\nimport { CartComponent } from './cart/cart.component';\nimport { AuthService } from './services/auth.service';\nimport { HttpService } from './services/http.service';\nimport { AuthGuardService } from './services/auth-guard.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    LoginComponent,\n    ProgramComponent,\n    CartComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    NgOtpInputModule,\n    FontAwesomeModule,\n    NgbModalModule,\n    NgbTooltipModule,\n    HttpClientModule\n  ],\n  providers: [AuthService, HttpService, AuthGuardService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../services/http.service';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from '../services/auth.service';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss']\n})\nexport class CartComponent implements OnInit {\n\n  public cartItems: any[] = [];\n  public subscriptions: any[] = [];\n  public priceMap: Map<string, number>;\n  public subscriptionMap: Map<number, string[]>;\n\n  constructor(private _httpService: HttpService, private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.getSubscriptions();\n    let storageItem = localStorage.getItem('cart');\n    if (storageItem) {\n      this.cartItems = JSON.parse(storageItem);\n    } else {\n      this.cartItems = [];\n    }\n  }\n\n  private getSubscriptions() {\n    this._httpService.getRequest(environment.SUBSCRIPTIONS, this.authService.token).subscribe((res)=>{\n      let body = res.body;\n      this.subscriptions = body['data'];\n      console.log(this.subscriptions);\n      this.subscriptionMap = new Map<number, string[]>();\n      let g = _.groupBy(this.subscriptions, (item: any) => item.programid);\n      for(let key in g) {\n        let n = [];\n        g[key].forEach((element: any) => {\n          n.push(element.package);\n        });\n        this.subscriptionMap.set(Number(key),n);\n      }\n      console.log(this.subscriptionMap);\n      this.priceMap = new Map<string, number>();\n      this.subscriptions.forEach((item: any)=>{\n        this.priceMap.set(item.name, item.price);\n      });\n      console.log(this.priceMap);\n    });\n  }\n\n  public getSubscriptionCost(name: string) {\n    return this.priceMap.get(name);\n  }\n\n  public getSubscriptionProgramsWise(programId: number) {\n    return this.subscriptionMap.get(programId);\n  }\n\n}\n","<div class=\"container m-t-2\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <div class=\"table-responsive\">\n                        <table class=\"table table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\" colspan=\"4\" class=\"text-center\">Order Summary</th>\n                                </tr>\n                                <tr>\n                                    <th scope=\"col\">Sr No.</th>\n                                    <th scope=\"col\">Particulars</th>\n                                    <th scope=\"col\">Package</th>\n                                    <th scope=\"col\">Amount (Rs.)</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <th scope=\"row\">1</th>\n                                    <td>\n                                        <p class=\"text-left f-w-600\">Program 1</p>\n                                        <ul>\n                                            <li class=\"text-left\">Coconut Water</li>\n                                            <li class=\"text-left\">Almond Milk</li>\n                                            <li class=\"text-left\">Protein Milkshake</li>\n                                        </ul>\n                                    </td>\n                                    <td><select class=\"form-control\" id=\"exampleFormControlSelect1\">\n                                        <option>Monthly</option>\n                                        <option>Quarterly</option>\n                                      </select></td>\n                                    <td>₹500</td>\n                                </tr>\n                                <tr>\n                                    <th scope=\"row\">2</th>\n                                    <td>\n                                        <p class=\"text-left f-w-600\">Program 2</p>\n                                        <ul>\n                                            <li class=\"text-left\">Coconut Water</li>\n                                            <li class=\"text-left\">Mango</li>\n                                            <li class=\"text-left\">Grape</li>\n                                        </ul>\n                                    </td>\n                                    <td><select class=\"form-control\" id=\"exampleFormControlSelect1\">\n                                        <option>Quarterly</option>\n                                        <option>Monthly</option>\n                                      </select></td>\n                                    <td>₹1500</td>\n                                </tr>\n                                <tr class=\"total\">\n                                    <td colspan=\"3\" class=\"text-center\">TOTAL</td>\n                                    <td>₹2000</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <button class=\"btn btn-dark text-uppercase float-right m-l-1 m-b-1\">Proceed to Checkout</button>\n                            <button class=\"btn btn-outline-dark text-uppercase float-right m-b-1\">Continue Shopping</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { faStopwatch } from '@fortawesome/free-solid-svg-icons';\nimport {\n  NgbModal,\n  NgbModalOptions\n} from '@ng-bootstrap/ng-bootstrap';\nimport { AuthService } from '../services/auth.service';\nimport { HttpService } from '../services/http.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { environment } from '../../environments/environment';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  toggleBtn = {\n    msgText: 'Don\\'t have an account?',\n    linkText: 'Sign Up',\n    headerText: 'Account Login',\n  };\n  signInFormEnabled = true;\n  timeLeft = environment.OTP_TIMEOUT;\n  timerText: string;\n  timeTracker: any;\n  OTP: string = '';\n  timerExpired = false;\n  timerView = false;\n  faStopwatch = faStopwatch;\n  otpView = false;\n  mobileNumber: string = '';\n  forgotPwdModalRef: any;\n  signUpModalRef: any;\n  modalReference: any;\n  forgotPwdform = { password: '', confirmPassword: '', mobileNumber: '' };\n  @ViewChild('signUpForm', { static: false }) signUpForm: NgForm;\n  @ViewChild('signInForm', { static: false }) signInForm: NgForm;\n\n  constructor(\n    private modalService: NgbModal,\n    private authService: AuthService,\n    private _httpService: HttpService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void { }\n\n  launchModal(ref: any, name: string) {\n    const ngbModalOptions: NgbModalOptions = {\n      backdrop: 'static',\n      keyboard: false,\n    };\n    if (name === 'SignUp') {\n      this.sendOTP();\n      console.log(this.signUpForm.form.value);\n    }\n    this.modalReference = this.modalService.open(ref, ngbModalOptions);\n    this.modalReference.result.then(\n      (result: string) => {},\n      (reason: any) => {\n        this.otpView = false;\n      }\n    );\n  }\n\n  toggleBtnHandler() {\n    this.signInFormEnabled = !this.signInFormEnabled;\n    if (this.signInFormEnabled) {\n      this.toggleBtn = {\n        msgText: 'Don\\'t have an account?',\n        linkText: 'Sign Up',\n        headerText: 'Account Login',\n      };\n    } else {\n      this.toggleBtn = {\n        msgText: 'Existing User?',\n        linkText: 'Sign In',\n        headerText: 'Create Your Account',\n      };\n    }\n  }\n\n  onOtpChange($event) {\n    console.log($event);\n    let ev = $event;\n    this.OTP = ev.toString();\n    if (this.OTP.length === 6) {\n      if (!this.signInFormEnabled) {\n        this.signUp(this.OTP);\n      }\n    }\n  }\n\n  countdown() {\n    if (this.timeLeft === 0) {\n      clearTimeout(this.timeTracker);\n      this.timeLeft = environment.OTP_TIMEOUT;\n      this.timerText =\n        'OTP entered is expired. Please generate a new one and try again';\n      this.timerExpired = true;\n    } else {\n      this.timerView = true;\n      this.timerExpired = false;\n      this.timerText = 'OTP expires within ' + this.timeLeft + ' seconds';\n      this.timeLeft--;\n    }\n  }\n\n  sendOTP() {\n    console.log('Sending OTP');\n    let _url;\n    if (!this.signInFormEnabled) {\n      _url = environment.SIGN_UP_VERIFY;\n    } else {\n      _url = environment.FORGOT_PWD_VERIFY;\n    }\n    this._httpService.postRequest(_url, JSON.stringify({ mobile_number: this.mobileNumber }), '').subscribe((res: any) => {\n      clearTimeout(this.timeTracker);\n      this.timeLeft = environment.OTP_TIMEOUT;\n      this.timerText = 'OTP expires within ' + this.timeLeft + ' seconds';\n      this.timerView = false;\n      this.timeTracker = setInterval(() => {\n        this.countdown();\n      }, 1000);\n    }, (error: Error) => {\n    });\n  }\n\n  enablePasswordInput() {\n    this.sendOTP();\n    this.otpView = true;\n  }\n\n  login() {\n    let formValues = this.signInForm.form.value;\n    let body = {\n      mobile_number: formValues.mobileNumber,\n      password: formValues.password\n    }\n    this.authService.login(environment.LOGIN, JSON.stringify(body)).subscribe((res: any) => {\n      let body = res.body;\n      this.postAuth(body);\n    }, (error: Error) => {\n    });\n  }\n\n  forgotPassword() {\n    let body = {\n      mobile_number: this.forgotPwdform.mobileNumber,\n      password: this.forgotPwdform.confirmPassword,\n      otp: this.OTP\n    }\n    this._httpService.postRequest(environment.FORGOT_PWD, JSON.stringify(body), '').subscribe((res: any) => {\n      let body = res.body;\n      console.log(body);\n    }, (error: Error) => {\n    });\n  }\n\n  signUp(OTP: string) {\n    let formValues = this.signUpForm.form.value;\n    let body = {\n      firstname: formValues.firstName,\n      lastname: formValues.lastName,\n      email: formValues.emailID,\n      password: formValues.password,\n      mobile_number: this.mobileNumber,\n      userrole: 'Consumer',\n      otp: OTP,\n    }\n    this._httpService.postRequest(environment.SIGN_UP, JSON.stringify(body), '').subscribe((res: any) => {\n      let body = res.body;\n      this.postAuth(body);\n      this.modalReference.close();\n    }, (error: Error) => {\n    });\n  }\n\n  postAuth(body: any) {\n    this.authService.token = body.token;\n    delete body.token;\n    this.authService.usrObj = body;\n    console.log(body);\n    this.authService.clientName = body.firstname.charAt(0).toUpperCase() + body.firstname.slice(1) + ' ' + body.lastname.charAt(0).toUpperCase() + body.lastname.slice(1);\n    this.authService.isLoggedIn = true;\n    if (this.authService.redirectUrl) {\n      this.router.navigate([this.authService.redirectUrl]);\n    } else {\n      this.router.navigate(['/profile'], { relativeTo: this.activatedRoute });\n    }\n  }\n}\n","<div class=\"card\">\n    <header id=\"header\">\n        <h6 class=\"text-center\">{{toggleBtn.headerText}}</h6>\n    </header>\n    <div class=\"card-body\">\n        <ng-container *ngIf=\"signInFormEnabled\">\n            <form #signInForm=\"ngForm\" (ngSubmit)=\"login()\">\n                <div class=\"form-group\">\n                    <label for=\"mobileNumber\">Mobile Number</label>\n                    <input type=\"email\" class=\"form-control\" id=\"mobileNumber\" name=\"mobileNumber\"\n                        #mobileNumber=\"ngModel\" ngModel required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\">Password</label>\n                    <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" #password=\"ngModel\"\n                        ngModel required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"checkbox\" class=\"form-check-input\" id=\"rememberMe\" name=\"rememberMe\"\n                        #rememberMe=\"ngModel\" ngModel>\n                    <label for=\"rememberMe\" id=\"rememberMeLabel\">Remember Me</label>\n                    <a id=\"forgotPasswordLink\" href=\"javascript:void(0);\"\n                        (click)=\"launchModal(forgotPwdModal, 'ForgotPwd')\">Forgot Password?</a>\n                </div>\n                <button type=\"submit\" class=\"btn btn-dark mx-auto d-block\" [disabled]=\"!signInForm.valid\">Log\n                    In</button>\n            </form>\n        </ng-container>\n        <ng-container *ngIf=\"!signInFormEnabled\">\n            <form #signUpForm=\"ngForm\" (ngSubmit)=\"launchModal(signUpModal, 'SignUp')\">\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <div class=\"form-group\">\n                            <label for=\"firstName\">First Name</label>\n                            <input type=\"text\" class=\"form-control\" id=\"firstName\" name=\"firstName\" #firstName=\"ngModel\"\n                                ngModel required>\n                        </div>\n                    </div>\n                    <div class=\"col\">\n                        <div class=\"form-group\">\n                            <label for=\"lastName\">Last Name</label>\n                            <input type=\"text\" class=\"form-control\" id=\"lastName\" name=\"lastName\" #lastName=\"ngModel\"\n                                ngModel required>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"emailID\">Email</label>\n                    <input type=\"email\" class=\"form-control\" id=\"emailID\" name=\"emailID\" #emailID=\"ngModel\" ngModel\n                        required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\">Password</label>\n                    <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" #password=\"ngModel\"\n                        ngModel required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"mobileNumber\">Mobile Number</label>\n                    <input type=\"email\" class=\"form-control\" id=\"mobileNumber\" name=\"mobileNumber\"\n                    [(ngModel)]=\"mobileNumber\" [ngModelOptions]=\"{standalone: true}\" required>\n                </div>\n                <button type=\"submit\" class=\"btn btn-dark mx-auto d-block\" [disabled]=\"!signUpForm.valid\">Sign\n                    Up</button>\n            </form>\n        </ng-container>\n        <div class=\"toggle\">\n            {{toggleBtn.msgText}} <a href=\"javascript:void(0);\" (click)=\"toggleBtnHandler()\">{{toggleBtn.linkText}}</a>\n        </div>\n    </div>\n</div>\n\n<ng-template #signUpModal let-modal>\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" (click)=\"modal.dismiss('Cross click')\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <div class=\"container\">\n            <div class=\"header m-b-2\">\n                <h5 class=\"text-center\">Phone Number Verification</h5>\n                <p class=\"text-center\">Enter the code sent to <span class=\"f-w-600\">+91 - XXXXXXXXXX</span></p>\n            </div>\n            <ng-otp-input (onInputChange)=\"onOtpChange($event)\"\n                [config]=\"{length:6, allowNumbersOnly: true, containerClass:'otp-container-class', inputClass: 'otp-input-class'}\">\n            </ng-otp-input>\n            <hr>\n            <p class=\"text-danger text-center\" *ngIf=\"timerView\">\n                <fa-icon [icon]=\"faStopwatch\"></fa-icon>\n                {{this.timerText}}\n            </p>\n            <div class=\"resend m-b-1\" [ngClass]=\"{'not-allowed': !timerExpired}\">\n                Didn't receive the code? <a href=\"javascript:void(0);\" (click)=\"sendOTP()\"\n                    [ngClass]=\"{'not-clickable': !timerExpired}\">RESEND OTP</a>\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n<ng-template #forgotPwdModal let-modal>\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" (click)=\"modal.dismiss('Cross click')\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <div class=\"container\">\n            <div class=\"header m-b-2\">\n                <h5 class=\"text-center\">Forgot Password ?</h5>\n                <p class=\"text-center\" *ngIf=\"!otpView\">You can reset your password here.</p>\n                <p class=\"text-center\" *ngIf=\"otpView\">Enter the code sent to <span class=\"f-w-600\">+91 -\n                        XXXXXXXXXX</span></p>\n            </div>\n            <ng-container *ngIf=\"!otpView\">\n                <input type=\"text\" class=\"form-control m-b-1\" id=\"inputMobileNumber\" placeholder=\"Mobile Number\" [(ngModel)]=\"forgotPwdform.mobileNumber\">\n                <button type=\"button\" class=\"btn btn-dark mx-auto d-block\"\n                    (click)=\"enablePasswordInput()\" [disabled]=\"forgotPwdform.mobileNumber.length !== 10\">Submit</button>\n            </ng-container>\n            <ng-container *ngIf=\"otpView\">\n                <form>\n                    <div class=\"form-group\">\n                        <label for=\"newPassword\">New Password</label>\n                        <input type=\"password\" class=\"form-control\" id=\"newPassword\" name=\"newPassword\" [(ngModel)]=\"forgotPwdform.password\" required autofocus minlength=\"8\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"confirmPassword\">Re-enter New Password</label>\n                        <input type=\"password\" class=\"form-control\" id=\"confirmPassword\" name=\"confirmPassword\" [(ngModel)]=\"forgotPwdform.confirmPassword\" required minlength=\"8\">\n                    </div>\n                    <ng-otp-input (onInputChange)=\"onOtpChange($event)\"\n                        [config]=\"{length:6, allowNumbersOnly: true, containerClass:'otp-container-class', inputClass: 'otp-input-class', disableAutoFocus: true}\">\n                    </ng-otp-input>\n                    <hr>\n                    <p class=\"text-danger text-center\" *ngIf=\"timerView\">\n                        <fa-icon [icon]=\"faStopwatch\"></fa-icon>\n                        {{this.timerText}}\n                    </p>\n                    <div class=\"resend m-b-1\" [ngClass]=\"{'not-allowed': !timerExpired}\">\n                        Didn't receive the code? <a href=\"javascript:void(0);\" (click)=\"sendOTP()\"\n                            [ngClass]=\"{'not-clickable': !timerExpired}\">RESEND OTP</a>\n                    </div>\n                    <button type=\"button\" class=\"btn btn-dark mx-auto d-block\"\n                        [disabled]=\"OTP.length !== 6 || (forgotPwdform.password.length === 0) || (forgotPwdform.confirmPassword.length === 0) || forgotPwdform.password !== forgotPwdform.confirmPassword\" (click)=\"forgotPassword()\">Submit</button>\n                </form>\n            </ng-container>\n        </div>\n    </div>\n</ng-template>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>main works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {\n  NgbModal,\n  ModalDismissReasons\n} from '@ng-bootstrap/ng-bootstrap';\nimport { faPlus, faMinus, faShoppingCart, faShoppingBasket } from '@fortawesome/free-solid-svg-icons';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpService } from '../services/http.service';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from '../services/auth.service';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-program',\n  templateUrl: './program.component.html',\n  styleUrls: ['./program.component.scss'],\n})\nexport class ProgramComponent implements OnInit {\n  public products = [];\n  closeResult = '';\n  faPlus = faPlus;\n  faMinus = faMinus;\n  faShoppingCart = faShoppingCart;\n  faShoppingBasket = faShoppingBasket;\n  public productAdvantages: [];\n  public basketItems = 0;\n  public minBasketItems = 0;\n  public cartAlert: boolean = false;\n  private activeProgram: any;\n  public selectedItemCount: number = 0;\n  public selectedItemIndex: number = 0;\n\n  constructor(private modalService: NgbModal, private activatedRoute: ActivatedRoute, private _httpService: HttpService, private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.activeProgram = this.authService.program;\n    this.minBasketItems = this.activeProgram['min_buy_criteria'] ? this.activeProgram['min_buy_criteria'] : 0;\n    this.activatedRoute.queryParams.subscribe(params => {\n      const programId = parseInt(params['programId']);\n      this.getProducts(programId);\n    });\n  }\n\n  open(ref: any, index: number) {\n    this.productAdvantages = this.products[index]['advantages'];\n    this.selectedItemIndex = index;\n    this.selectedItemCount = this.products[index]['total'];\n    this.modalService.open(ref, { size: 'lg' }).result.then(\n      (result) => {\n        this.closeResult = `Closed with: ${result}`;\n      },\n      (reason) => {\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n      }\n    );\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  private getProducts(programId: number) {\n    this._httpService.getRequest(environment.PRODUCTS_LIST + \"?programId=\" + programId, this.authService.token).subscribe((res) => {\n      let body = res.body;\n      this.products = body['data'];\n      this.products.forEach((el: any) => {\n        el.total = 0;\n      });\n    }, (error: Error) => {});\n  }\n\n  public basketOps(index: number, operation: string) {\n    if (operation === 'Add') {\n      this.products[index]['total'] += 1;\n    } else {\n      this.products[index]['total'] -= 1;\n    }\n    this.selectedItemCount = this.products[index]['total'];\n    this.validateBasket();\n  }\n\n  private validateBasket() {\n    this.basketItems = 0;\n    this.products.forEach((el: any) => {\n      if (el.total > 0) {\n        this.basketItems += el.total;\n      }\n    });\n    // if (this.basketItems >= this.minBasketItems) {\n    //   this.cartAlert = true;\n    //   setTimeout(() => {\n    //     this.cartAlert = false;\n    //   }, 5000);\n    // } else {\n    //   this.cartAlert = false;\n    // }\n  }\n\n  public goToCart(){\n    let items = [];\n    this.products.forEach((element: any) => {\n      if(element.total > 0) {\n        items.push(element);\n      }\n    });\n    let cartObj = localStorage.getItem('cart');\n    if(cartObj) {\n      let cartArr = JSON.parse(cartObj);\n      let o = _.groupBy(cartArr, item=> item.name);\n      console.log(o);\n    } else {\n      localStorage.setItem('cart', JSON.stringify([{ name: this.activeProgram['name'], items: items }]));\n    }    \n    if(this.authService.isLoggedIn) {\n      this.router.navigate(['/cart'], { relativeTo: this.activatedRoute });\n    } else {\n      this.router.navigate(['/login'], { relativeTo: this.activatedRoute });\n    }\n  }\n}\n","<div class=\"container\">\n    <div class=\"alert alert-danger text-uppercase animate__animated animate__slideInDown\" role=\"alert\" *ngIf=\"basketItems > 0 && basketItems < minBasketItems\">\n        Minimum {{minBasketItems}} to be selected in this program to proceed to Cart\n    </div>\n    <div class=\"alert alert-success text-uppercase animate__animated animate__slideInDown\" role=\"alert\" *ngIf=\"basketItems > 0 && basketItems > minBasketItems\">\n        You can proceed to cart now\n    </div>\n    <div class=\"row m-t-2\">\n        <div class=\"col-xl-4 col-lg-12\" *ngFor=\"let item of products; let i=index;\">\n            <div class=\"card m-b-1\">\n                <img src=\"./assets/images/dummy.png\" class=\"card-img-top\" alt=\"item.name\" (click)=\"open(content, i)\">\n                <div class=\"card-body\">\n                    <h5 class=\"card-title text-center text-uppercase\">{{item.name}}</h5>\n                    <hr>\n                    <ng-container *ngIf=\"item.total > 0\">\n                        <div class=\"row\">\n                            <div class=\"col-xl-8 col-lg-12 d-block mx-auto\">\n                                <div class=\"input-group\">\n                                    <div class=\"input-group-prepend\">\n                                        <button class=\"btn btn-outline-dark\" type=\"button\" id=\"button-addon1\"\n                                            (click)=\"basketOps(i, 'Remove')\">\n                                            <fa-icon [icon]=\"faMinus\"></fa-icon>\n                                        </button>\n                                    </div>\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"\"\n                                        aria-label=\"Example text with button addon\" aria-describedby=\"button-addon1\"\n                                        disabled value=\"{{item.total}}\">\n                                    <div class=\"input-group-append\">\n                                        <button class=\"btn btn-outline-dark\" type=\"button\" id=\"button-addon2\"\n                                            (click)=\"basketOps(i, 'Add')\">\n                                            <fa-icon [icon]=\"faPlus\"></fa-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n                    <ng-container *ngIf=\"item.total === 0\">\n                        <button type=\"button\" class=\"btn btn-dark btn-block mx-auto d-block\"\n                            (click)=\"basketOps(i, 'Add')\"><fa-icon class=\"m-r-1\" [icon]=\"faShoppingBasket\"></fa-icon> ADD TO\n                            BASKET</button>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <button\n                class=\"btn btn-xl btn-dark float-right text-uppercase animate__animated animate__pulse animate__infinite\"\n                *ngIf=\"basketItems > 0\" [disabled]=\"basketItems < minBasketItems\" (click)=\"goToCart()\"><fa-icon class=\"m-r-1\" [icon]=\"faShoppingCart\"></fa-icon> Proceed to Cart</button>\n        </div>\n    </div>\n</div>\n\n<ng-template #content let-modal>\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <div class=\"container\">\n            <h3 class=\"text-center f-w-700\">COCONUT WATER</h3>\n            <hr>\n            <div class=\"row\">\n                <div class=\"col-xl-4 col-lg-12\">\n                    <img class=\"modal-image m-b-1\" src=\"./assets/images/dummy.png\" style=\"width: 100%;\"\n                        alt=\"Product Image\">\n                    <hr>\n                    <ng-container *ngIf=\"selectedItemCount === 0\">\n                        <button type=\"button\" class=\"btn btn-dark btn-block mx-auto d-block\"><fa-icon class=\"m-r-1\" [icon]=\"faShoppingBasket\"></fa-icon>ADD TO BASKET</button>\n                    </ng-container>\n                    <ng-container *ngIf=\"selectedItemCount > 0\">\n                        <div class=\"row\">\n                            <div class=\"col-xl-8 col-lg-12 d-block mx-auto\">\n                                <div class=\"input-group\">                                                                                                                                                                                                                                                                          \n                                    <div class=\"input-group-prepend\">\n                                        <button class=\"btn btn-outline-dark\" type=\"button\" id=\"button-addon1\" (click)=\"basketOps(selectedItemIndex, 'Remove')\">\n                                            <fa-icon [icon]=\"faMinus\"></fa-icon>\n                                        </button>\n                                    </div>\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"\"\n                                        aria-label=\"Example text with button addon\" aria-describedby=\"button-addon1\"\n                                        disabled value=\"{{selectedItemCount}}\">\n                                    <div class=\"input-group-append\">\n                                        <button class=\"btn btn-outline-dark\" type=\"button\" id=\"button-addon2\" (click)=\"basketOps(selectedItemIndex, 'Add')\">\n                                            <fa-icon [icon]=\"faPlus\"></fa-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n                </div>\n                <div class=\"col-xl-8 col-lg-12\">\n                    <p class=\"text-left m-b-2 m-t-1\">Every athlete’s go-to natural energy drink; Coconut Water is a\n                        complete win-win for\n                        your everyday rehydration needs. #iaminlovewiththecoco!</p>\n                    <div class=\"card\">\n                        <div class=\"card-header\" id=\"advantages\">\n                            <h6 class=\"m-b-0\">ADVANTAGES</h6>\n                        </div>\n                        <div class=\"card-body\">\n                            <ul>\n                                <li *ngFor=\"let item of productAdvantages; let i=index;\">{{item}}</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-template>","import { Injectable } from '@angular/core';\r\nimport {\r\n    CanActivate, Router,\r\n    ActivatedRouteSnapshot,\r\n    RouterStateSnapshot,\r\n    CanActivateChild,\r\n    NavigationExtras,\r\n    CanLoad, Route\r\n} from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate, CanActivateChild, CanLoad {\r\n\r\n    constructor(\r\n        public authService: AuthService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n        let url: string = state.url;\r\n\r\n        return this.checkLogin(url);\r\n    }\r\n\r\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n        return this.canActivate(route, state);\r\n    }\r\n\r\n    canLoad(route: Route): boolean {\r\n        let url = `/${route.path}`;\r\n\r\n        return this.checkLogin(url);\r\n    }\r\n\r\n    checkLogin(url: string): boolean {\r\n        if (this.authService.isLoggedIn) { return true; }\r\n\r\n        // Store the attempted URL for redirecting\r\n        this.authService.redirectUrl = url;\r\n\r\n        // Create a dummy session id\r\n        let sessionId = 123456789;\r\n\r\n        // Set our navigation extras object\r\n        // that contains our global query params and fragment\r\n        let navigationExtras: NavigationExtras = {\r\n            queryParams: { 'session_id': sessionId },\r\n            fragment: 'anchor'\r\n        };\r\n\r\n        // Navigate to the login page with extras\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpService } from './http.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  isLoggedIn = false;\r\n  token: string = \"\";\r\n  clientName: string;\r\n  redirectUrl: string;\r\n  usrObj: any;\r\n  program: any;\r\n\r\n  constructor(\r\n    private _httpService: HttpService\r\n  ) { }\r\n\r\n  login(uri: string, body: string): any {\r\n    return this._httpService.postRequest(uri, body, this.token);\r\n  }\r\n\r\n  logout(uri: any): any {\r\n    return this._httpService.deleteRequest(uri, this.token);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n\r\n    public _url: string = \"https://juicedelivery.herokuapp.com/\";\r\n\r\n    constructor(private _httpClient: HttpClient) { }\r\n\r\n    getRequest(uri: string, token: string) {\r\n        let headers = new HttpHeaders({ 'Authorization': 'Bearer ' + token });\r\n        return this._httpClient.get(this._url + encodeURI(uri), { headers: headers, observe: 'response' })\r\n            .pipe(catchError(this.errorHandler));\r\n    }\r\n\r\n    postRequest(uri: string, body: string, token: string) {\r\n        let headers = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + token });\r\n        return this._httpClient.post(this._url + uri, body, { headers: headers, observe: 'response' })\r\n            .pipe(catchError(this.errorHandler));\r\n    }\r\n\r\n    putRequest(uri: string, body: string, token: string) {\r\n        let headers = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + token });\r\n        return this._httpClient.put(this._url + uri, body, { headers: headers, observe: 'response' })\r\n            .pipe(catchError(this.errorHandler));\r\n    }\r\n\r\n    deleteRequest(uri: string, token: string) {\r\n        let headers = new HttpHeaders({ 'Authorization': 'Bearer ' + token });\r\n        return this._httpClient.delete(this._url + encodeURI(uri), { headers: headers, observe: 'response' })\r\n            .pipe(catchError(this.errorHandler));\r\n    }\r\n\r\n    fileDownload(uri: string, token: string) {\r\n        let headers = new HttpHeaders({ 'Authorization': 'Bearer ' + token });\r\n        return this._httpClient.get(this._url + encodeURI(uri), { headers: headers, observe: 'response', responseType: 'blob' })\r\n            .pipe(catchError(this.errorHandler));\r\n    }\r\n\r\n    GetSortOrder(prop) {\r\n        return function (a, b) {\r\n            if (a[prop] > b[prop]) {\r\n                return 1;\r\n            } else if (a[prop] < b[prop]) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    private errorHandler(error: HttpErrorResponse) {\r\n        return throwError(error || \"Server Error\");\r\n    };\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  \"LOGIN\": \"api/user/signin\",\n  \"SIGN_UP\": \"api/user/signup\",\n  \"SIGN_UP_VERIFY\": \"api/user/signup/verify\",\n  \"FORGOT_PWD\": \"api/user/forgot-password\",\n  \"FORGOT_PWD_VERIFY\": \"api/user/forgot-password/verify\",\n  \"RESET_PWD\": \"api/user/password/reset\",\n  \"USER_ADDRESS\": \"api/user/address\",\n  \"SIGN_OUT\": \"api/user/signout\",\n  \"PROGRAM_LIST\": \"api/program\",\n  \"PRODUCTS_LIST\": \"api/products\",\n  \"SUBSCRIPTIONS\": \"api/subscription\",\n  \"OTP_TIMEOUT\": 60\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}